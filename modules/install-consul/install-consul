#!/bin/bash
# This script can be used to install Consul and its dependencies. This script has been tested with the CentOS 7 operating system.

set -e

readonly DEFAULT_INSTALL_PATH="/opt/consul"
readonly DEFAULT_CONSUL_USER="consul"

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly SCRIPT_NAME="$(basename "$0")"

function print_usage {
  echo
  echo "Usage: install-consul [OPTIONS]"
  echo
  echo "This script can be used to install Consul and its dependencies. This script has been tested with CentOS 7."
  echo
  echo "Options:"
  echo
  echo -e "  --version\t\tThe version of Consul to install. Required."
  echo -e "  --sha256sum\t\tThe sha256 checksum of the Consul binary. Required."
  echo -e "  --path\t\tThe path where Consul should be installed. Optional. Default: $DEFAULT_INSTALL_PATH."
  echo -e "  --user\t\tThe user who will own the Consul install directories. Optional. Default: $DEFAULT_CONSUL_USER."
  echo
  echo "Example:"
  echo
  echo "  install-consul --version 1.0.0"
}

function log {
  local readonly level="$1"
  local readonly message="$2"
  local readonly timestamp=$(date +"%Y-%m-%d %H:%M:%S")
  >&2 echo -e "${timestamp} [${level}] [$SCRIPT_NAME] ${message}"
}

function log_info {
  local readonly message="$1"
  log "INFO" "$message"
}

function log_warn {
  local readonly message="$1"
  log "WARN" "$message"
}

function log_error {
  local readonly message="$1"
  log "ERROR" "$message"
}

function assert_not_empty {
  local readonly arg_name="$1"
  local readonly arg_value="$2"

  if [[ -z "$arg_value" ]]; then
    log_error "The value for '$arg_name' cannot be empty"
    print_usage
    exit 1
  fi
}

# Install steps are based on: http://stackoverflow.com/a/31576473/483528
function setup_systemd_services {
    local readonly username="$1"
    sudo cp "$SCRIPT_DIR/update-ca-cert.service" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/update-ca-cert.path" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul.service" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul.path" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul-restart.service" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul-restart.path" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul-watch-cfssl.service" "/etc/systemd/system/"
    sudo cp "$SCRIPT_DIR/consul-watch-cacerts.service" "/etc/systemd/system/"

    sudo sed -i -e s/User=consul/User=$username/g "/etc/systemd/system/consul.service"
    sudo sed -i -e "s,/opt/consul,$path,g" "/etc/systemd/system/consul.service"
    sudo sed -i -e s/User=consul/User=$username/g "/etc/systemd/system/consul-watch-cfssl.service"
    sudo sed -i -e s/User=consul/User=$username/g "/etc/systemd/system/consul-watch-cacerts.service"
    sudo sed -i -e "s,/opt/consul,$path,g" "/etc/systemd/system/consul-watch-cfssl.service"
    sudo sed -i -e "s,/opt/consul,$path,g" "/etc/systemd/system/consul-watch-cacerts.service"

    sudo systemctl enable consul.path consul-watch-cfssl.service update-ca-cert.path consul-restart.path

    # disable firewalld. TODO: make a proper setup for consul
    if systemctl list-unit-files --all | grep -q firewalld.service; then
        sudo systemctl stop firewalld
        sudo systemctl mask firewalld
    fi
}

function install_dependencies {
  log_info "Installing dependencies"

  if [ -n "$(command -v yum)" ]; then
      sudo yum install -y curl unzip nmap-ncat bind-utils
  elif [ -n "$(command -v coreos-install)" ]; then
       log_info "Nothing to do for coreos"
  else
      log_error "Could not find yum. Cannot install dependencies on this OS."
      exit 1
  fi
}

function user_exists {
  local readonly username="$1"
  id "$username" >/dev/null 2>&1
}

function create_consul_user {
  local readonly username="$1"

  if $(user_exists "$username"); then
    echo "User $username already exists. Will not create again."
  else
    log_info "Creating user named $username"
    sudo useradd "$username"
  fi
}

function create_consul_install_paths {
  local readonly path="$1"
  local readonly username="$2"

  log_info "Creating install dirs for Consul at $path"
  sudo mkdir -p "$path/bin"
  sudo mkdir -p "$path/data"
  sudo mkdir -p "$path/config"

  log_info "Changing ownership of $path to $username"
  sudo chown -R "$username:$username" "$path"
}

function install_binaries {
  local readonly version="$1"
  local readonly sha256sum="$2"
  local readonly path="$3"
  local readonly username="$4"

  local readonly url="https://releases.hashicorp.com/consul/${version}/consul_${version}_linux_amd64.zip"
  local readonly download_path="/tmp/consul_${version}_linux_amd64.zip"
  local readonly bin_dir="$path/bin"

  log_info "Downloading Consul $version from $url to $download_path"
  curl -o "$download_path" "$url"
  if [ "$sha256sum" != "$(sha256sum "$download_path" | awk '{print $1}')" ]; then
      log_error "dl binary checksum error $sha256sum != $(sha256sum "$download_path" | awk '{print $1}')"
      exit 1
  else
      unzip -d /tmp "$download_path"
  fi

  log_info "Copying binaires & scripts to $bin_dir/"
  sudo cp /tmp/consul \
       "$SCRIPT_DIR/consul-manage" \
       "$SCRIPT_DIR/watch-cfssl.sh" \
       "$SCRIPT_DIR/watch-cacerts.sh" \
       "$SCRIPT_DIR/functions.sh" \
       "$SCRIPT_DIR/defaults.conf" "$bin_dir/"

  sudo sed -i -e "s,/opt/consul,$path,g" "$bin_dir/defaults.conf"
  sudo chown -R "$username:$username" "$path"
  sudo chmod a+x "$bin_dir/consul" \
       "$bin_dir/consul-manage" \
       "$bin_dir/watch-cfssl.sh" \
       "$bin_dir/watch-cacerts.sh"
}

function install {
  local version=""
  local path="$DEFAULT_INSTALL_PATH"
  local user="$DEFAULT_CONSUL_USER"

  while [[ $# > 0 ]]; do
    local key="$1"

    case "$key" in
      --version)
        version="$2"
        shift
        ;;
      --sha256sum)
          sha256sum="$2"
          shift
          ;;
      --path)
        path="$2"
        shift
        ;;
      --user)
        user="$2"
        shift
        ;;
      --help)
        print_usage
        exit
        ;;
      *)
        log_error "Unrecognized argument: $key"
        print_usage
        exit 1
        ;;
    esac

    shift
  done

  assert_not_empty "--version" "$version"
  assert_not_empty "--sha256sum" "$sha256sum"
  assert_not_empty "--path" "$path"
  assert_not_empty "--user" "$user"

  log_info "Starting Consul install"

  install_dependencies
  create_consul_user "$user"
  create_consul_install_paths "$path" "$user"
  install_binaries "$version" "$sha256sum" "$path" "$user"
  setup_systemd_services "$user"

  log_info "Consul install complete!"
}

install "$@"
